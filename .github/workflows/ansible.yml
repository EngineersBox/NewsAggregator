name: Ansible Deployment

on:
  workflow_dispatch:
    inputs:
      tags:
        description: 'Comma seperated list of components to deploy from: [elasticsearch, elasticsearch_base_indexes, elasticsearch_knn_indexes, redis, redis_backup_restore, frontend, backend]'     
        required: true
        default: 'elasticsearch, elasticsearch_base_indexes, elasticsearch_knn_indexes, redis, redis_backup_restore, frontend, backend'
      verbosity:
        description: "Level of verbosity to run Absible at. Must be one of: [0, 1, 2, 3]"
        required: true
        default: '1'
      target:
        description: "Box to target deployment to. Must be one of: [old, prod]"
        required: true
        default: 'old'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      PRIVATE_KEY_FILE: id_rsa
      ANSIBLE_DIR: ./ansible
      PLAYBOOK: site.yml
    steps:
      - uses: actions/checkout@main
      - name: Validate workflow inputs
        run: |
          chmod +x ./.github/listContains.sh
          ./.github/listContains.sh "elasticsearch elasticsearch_base_indexes elasticsearch_knn_indexes redis redis_backup_restore frontend backend" "$(echo ${{ github.event.inputs.tags }} | tr -ds "," " ")"
          echo "Using validated tags: [${{ github.event.inputs.tags }}]"
          ./.github/listContains.sh "0 1 2 3" "${{ github.event.inputs.verbosity }}"
          echo "Using validated verbosity: [${{ github.event.inputs.verbosity }}]"
      - name: Create verbosity level flags
        run: |
          verbosity_tags="$(echo "-$(printf "%3s" | tr " " "v")")"
          echo "verbosity_tags=\"$verbosity_tags\"" >> $GITHUB_ENV
          echo "Generated verbosity flag: [$verbosity_tags]"
      - name: Mapping target to inventory
        run: |
          echo "target_inventory=\"inventory/${{ github.event.inputs.target }}.ini\"" >> $GITHUB_ENV
          echo "Added specifier for target inventory"
      - name: Install ansible
        run: |
          sudo apt update
          sudo apt install -y software-properties-common
          sudo apt-add-repository -yu ppa:ansible/ansible
          sudo apt install -y ansible
          ansible-galaxy collection install community.general
      - name: Create key file
        run: |
          echo "$SSH_PRIVATE_KEY" > $PRIVATE_KEY_FILE
          sudo chmod 0600 $PRIVATE_KEY_FILE
        working-directory: ${{ env.ANSIBLE_DIR }}
        env:
          SSH_PRIVATE_KEY: if [[ "${{ github.event.inputs.target }}" == "old" ]]; then echo ${{ secrets.OLD_DEPLOY_KEY }}; else if [[ "${{ github.event.inputs.target }}" == "prod" ]]; then echo ${{ secrets.PROD_DEPLOY_KEY }}; else echo "INVALID"; fi;
      - name: Verify targets are accessible
        run: ansible all ${{ env.verbosity_tags }} --ssh-extra-args=${{ env.verbosity_tags }} -i ${{ env.target_inventory }} --private-key=$PRIVATE_KEY_FILE -m ping
        working-directory: ${{ env.ANSIBLE_DIR }}
      - name: Run playbook
        run: ansible-playbook ${{ env.verbosity_tags }} --ssh-extra-args=${{ env.verbosity_tags }}  -i ${{ env.target_inventory }} --tags "$(echo "${{ github.event.inputs.tags }}" | tr -ds "[:space:]" "")"  --private-key=$PRIVATE_KEY_FILE $PLAYBOOK
        working-directory: ${{ env.ANSIBLE_DIR }}
      - name: Remove key file
        run: sudo rm -rf $PRIVATE_KEY_FILE
        working-directory: ${{ env.ANSIBLE_DIR }}
